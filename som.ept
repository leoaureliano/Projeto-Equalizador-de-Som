node caixa(c:bool) returns(ligado:bool)
let
    automaton
    state Off do
      ligado=false;
     unless not c then ON
    state ON do
      ligado=true;
    unless c then Off
  end
 tel

(*node volume(down,down2,down3,down4,up,up2,up3,up4:bool) returns(s:int)
 let  
    automaton
    state Vol1 do
      s = 1
    unless up then Vol2|
           up2 then Vol3|
           up3 then Vol4|
           up4 then Vol5
    state Vol2 do
      s = 2
    unless  down then Vol1|
            up then Vol3|
            up2 then Vol4|
            up3 then Vol5
    state Vol3 do
      s = 3
    unless  down2 then Vol1|
            down then Vol2|
            up then Vol4|
            up2 then Vol5
    state Vol4 do
      s = 4
    unless  down3 then Vol1|
            down2 then Vol2
            down then Vol3|
            up then Vol5
    state Vol5 do
      s = 5
    unless  down4 then Vol1|
            down3 then Vol2|
            down2 then Vol3|
            down then Vol4
  end*)

 node equalisador(cvl,clo,cmi,chi,cvh,c,up,down:bool) returns(s:int)
 let  
    automaton
    state Verylow do
      s = 1
    unless not clo or (up & c) then Low|
           not cmi then Mid|
           not chi then High|
           not cvh then Veryhigh
    state Low do
      s = 2
    unless not cvl or (down & c) then Verylow|
           not cmi or (up & c)  then Mid|
           not chi then High|
           not cvh then Veryhigh
    state Mid do
      s = 3
    unless not cvl then Verylow|
           not clo or (down & c) then Low|
           not chi or (up & c) then High|
           not cvh then Veryhigh
    state High do
      s = 4
    unless not cvl then Verylow|
           not clo then Low|
           not cmi or (down & c) then Mid|
           not cvh or (up & c) then Veryhigh
    state Veryhigh do
      s = 5
    unless not cvl then Verylow|
           not clo then Low|
           not cmi then Mid|
           not chi or (down & c) then High
  end
tel

node music(tipo:int) returns(res:int)
let
    automaton
    state Off do
        res = 0;
    unless tipo = 1 then Classic |
           tipo = 2 then Electronic|
           tipo = 3 then Funk|
           tipo = 4 then Indie|
           tipo = 5 then POP|
           tipo = 6 then Regue|
           tipo = 7 then Rock
    state Classic do
        res = 1;
    unless tipo = 0 then Off|
           tipo = 2 then Electronic|
           tipo = 3 then Funk|
           tipo = 4 then Indie|
           tipo = 5 then POP|
           tipo = 6 then Regue|
           tipo = 7 then Rock

    state Electronic do
        res = 2;
    unless tipo = 0 then Off|
           tipo = 1 then Classic|
           tipo = 3 then Funk|
           tipo = 4 then Indie|
           tipo = 5 then POP|
           tipo = 6 then Regue|
           tipo = 7 then Rock
    state Funk do
        res = 3;
    unless tipo = 0 then Off|
           tipo = 1 then Classic|
           tipo = 2 then Electronic|
           tipo = 4 then Indie|
           tipo = 5 then POP|
           tipo = 6 then Regue|
           tipo = 7 then Rock
    state Indie do
        res = 4;
    unless tipo = 0 then Off|
           tipo = 1 then Classic|
           tipo = 2 then Electronic|
           tipo = 3 then Funk|
           tipo = 5 then POP|
           tipo = 6 then Regue|
           tipo = 7 then Rock
    state POP do
        res = 5;
    unless tipo = 0 then Off|
           tipo = 1 then Classic|
           tipo = 2 then Electronic|
           tipo = 3 then Funk|
           tipo = 4 then Indie|
           tipo = 6 then Regue|
           tipo = 7 then Rock
    state Regue do
        res = 6;
    unless tipo = 0 then Off|
           tipo = 1 then Classic|
           tipo = 2 then Electronic|
           tipo = 3 then Funk|
           tipo = 4 then Indie|
           tipo = 5 then POP|
           tipo = 7 then Rock
    state Rock do
        res = 7;
    unless tipo = 0 then Off|
           tipo = 1 then Classic|
           tipo = 2 then Electronic|
           tipo = 3 then Funk|
           tipo = 4 then Indie|
           tipo = 5 then POP|
           tipo = 6 then Regue

    end
tel

node main(tipo:int; upa,downa,upm,downm,upg,downg:bool) returns(cx1,cx2,cx3:bool; res:int; agudo,medio,grave:int)
contract
    var ruleOff, ruleClassic, ruleElectron, ruleFunk, ruleIndie, rulePOP, ruleRegue, ruleRock: bool;
    let
        ruleOff = not (res = 0) or (not cx1 & not cx2 & not cx3) & (agudo = 1 & medio = 1 & grave = 1); (*All Off*)
        ruleClassic = not (res = 1) or (cx1 & not cx2 & not cx3) & (agudo >= 1 & medio = 1 & grave = 1 ); (*Classic*)
        ruleElectron = not (res = 2) or (not cx1 & cx2 & not cx3) & (agudo = 1 & medio >= 1 & grave = 1 ); (*Electron*)
        ruleFunk = not (res = 3) or (not cx1 & not cx2 & cx3) & (agudo = 1 &  medio = 5 &  grave >= 1 ); (*Funk*)
        ruleIndie = not (res = 4) or (not cx1 & cx2 & cx3) & (agudo = 1 & medio <= 4 & grave = 1 ); (*Indie*)
        rulePOP =  not (res = 5) or (cx1 & not cx2 & cx3) & (agudo = 1 &  medio = 5 & grave <= 3 ); (*POP*)
        ruleRegue = not (res = 6) or (cx1 & cx2 & not cx3) & (agudo >= 2 & medio >= 1 & grave = 1 ); (*Regue*)
        ruleRock = not (res = 7) or (cx1 & cx2 & cx3) & (agudo >= 1 & medio >= 1 & grave >= 1 );(*Rock*)
    tel
    enforce ruleOff  & ruleClassic & ruleElectron & ruleFunk & ruleIndie & rulePOP & ruleRegue & ruleRock
    with (c1,c2,c3,ca1,ca2,ca3,ca4,ca5,ca,cm1,cm2,cm3,cm4,cm5,cm,cg1,cg2,cg3,cg4,cg5,cg:bool)

let
    res = inlined music(tipo);
    cx1 = inlined caixa(c1);
    cx2 = inlined caixa(c2);
    cx3 = inlined caixa(c3);
    agudo = inlined equalisador(ca1,ca2,ca3,ca4,ca5,ca,upa,downa);
    medio = inlined equalisador(cm1,cm2,cm3,cm4,cm5,cm,upm,downm);
    grave = inlined equalisador(cg1,cg2,cg3,cg4,cg5,cg,upg,downg);
    (*volume = inlined volume(down,down2,down3,down4,up,up2,up3,up4);*)
tel