node caixa(c:bool) returns(ligado:bool)
let 
    automaton
    state Off do 
      ligado=false;
     unless not c then ON
    state ON do 
      ligado=true;
    unless c then Off
  end
 tel

 node equalisador(c1,c2:bool) returns(s:int)
 let  
    automaton
    state Low do
      s = 10
    unless not c1= true then Mid|
           not c2 = true then High
    state Mid do
      s = 50
    unless not c2 = true then High|
           c1 = true then Low
    state High do
      s = 100
    unless c2 = true then Low|
           c1 = true then Mid
  end
tel

node music(tipo:int) returns(res:int)
let
    automaton
    state Off do
        res = 0;
    unless tipo = 1 then Classic |
           tipo = 2 then Electronic|
           tipo = 3 then Funk|
           tipo = 4 then Indie|
           tipo = 5 then POP|
           tipo = 6 then Regue|
           tipo = 7 then Rock
    state Classic do
        res = 1;
    unless tipo = 0 then Off|
           tipo = 2 then Electronic|
           tipo = 3 then Funk|
           tipo = 4 then Indie|
           tipo = 5 then POP|
           tipo = 6 then Regue|
           tipo = 7 then Rock

    state Electronic do
        res = 2;
    unless tipo = 0 then Off|
           tipo = 1 then Classic|
           tipo = 3 then Funk|
           tipo = 4 then Indie|
           tipo = 5 then POP|
           tipo = 6 then Regue|
           tipo = 7 then Rock
    state Funk do
        res = 3;
    unless tipo = 0 then Off|
           tipo = 1 then Classic|
           tipo = 2 then Electronic|
           tipo = 4 then Indie|
           tipo = 5 then POP|
           tipo = 6 then Regue|
           tipo = 7 then Rock
    state Indie do
        res = 4;
    unless tipo = 0 then Off|
           tipo = 1 then Classic|
           tipo = 2 then Electronic|
           tipo = 3 then Funk|
           tipo = 5 then POP|
           tipo = 6 then Regue|
           tipo = 7 then Rock
    state POP do
        res = 5;
    unless tipo = 0 then Off|
           tipo = 1 then Classic|
           tipo = 2 then Electronic|
           tipo = 3 then Funk|
           tipo = 4 then Indie|
           tipo = 6 then Regue|
           tipo = 7 then Rock
    state Regue do
        res = 6;
    unless tipo = 0 then Off|
           tipo = 1 then Classic|
           tipo = 2 then Electronic|
           tipo = 3 then Funk|
           tipo = 4 then Indie|
           tipo = 5 then POP|
           tipo = 7 then Rock
    state Rock do
        res = 7;
    unless tipo = 0 then Off|
           tipo = 1 then Classic|
           tipo = 2 then Electronic|
           tipo = 3 then Funk|
           tipo = 4 then Indie|
           tipo = 5 then POP|
           tipo = 6 then Regue

    end
tel

node main(tipo:int) returns(cx1,cx2,cx3:bool; res,agudo,medio,grave:int)
contract
    var ruleOff, ruleClassic, ruleElectron, ruleFunk, ruleIndie, rulePOP, ruleRegue, ruleRock: bool;
    let 
        ruleOff = not (res = 0) or (not cx1 & not cx2 & not cx3); (*All Off*)
        ruleClassic = not (res = 1) or (cx1 & not cx2 & not cx3) & (agudo = 10 & medio = 10 & grave = 10); (*Classic*)
        ruleElectron = not (re = 2) or (not cx1 & cx2 & not cx3) & (agudo = 50  & medio = 10 & grave = 10); (*Electron*)
        ruleFunk = not (res = 3) or (not cx1 & not cx2 & cx3) & (agudo = 50 &  medio = 50 &  grave < 30); (*Funk*)
        ruleIndie = not (res = 4) or (not cx1 & cx2 & cx3) & (agudo = 50 & medio = 50 & grave = 100); (*Indie*) 
        rulePOP =  not (res = 5) or (cx1 & not cx2 & cx3) & (agudo = 100 &  medio = 100 & grave = 100); (*POP*)
        ruleRegue = not (res = 6) or (cx1 & cx2 & not cx3) & (agudo = 100 & medio = 100 & grave = 100 ); (*Regue*)
        ruleRock = not (res = 7) or (cx1 & cx2 & cx3) & (agudo = 100 & medio = 100 & grave = 100);(*Rock*)
    tel
    enforce ruleOff & ruleClassic & ruleElectron & ruleFunk & ruleIndie & rulePOP & ruleRegue & ruleRock 
    with (c1,c2,c3,cea1,cea2,cem1,cem2,ceg1,ceg2:bool)

let 
    re = inlined music(tipo);
    cx1 = inlined caixa(c1);
    cx2 = inlined caixa(c2);
    cx3 = inlined caixa(c3);
    agudo = inlined equalisador(cea1,cea2);
    medio = inlined equalisador(cem1,cem2);
    grave = inlined equalisador(ceg1,ceg2);
tel